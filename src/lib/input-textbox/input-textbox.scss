$labelFocusScale: 75%;

input-textbox {
	--tb: var(--pri);
	--on-tb: var(--on-bg-pri);

	&[variant='secondary'] {
		--tb: var(--sec);
		--on-tb: var(--on-bg-sec);
	}
	&[variant='tertiary'] {
		--tb: var(--ter);
		--on-tb: var(--on-bg-ter);
	}

	display: flex;
	position: relative;
	flex: 1;
	align-items: center;
	transition: border-color 100ms var(--ease), outline-color 100ms var(--ease),
		outline-width 100ms var(--ease);
	outline: solid 0px rgba(var(--tb), 0.6);
	border: 2px solid rgba(var(--on-bg), 0.7);
	border-radius: 0.3rem;
	background-color: rgba(var(--bg-light), 0.2);
	padding: 0;
	min-height: 3rem;
	max-height: 3rem;
	user-select: none;

	.main {
		flex: 1 1 0;
		padding: 0 0.6rem;
		width: 0px;
	}

	input {
		border: none;
		background-color: transparent;
		width: 100%;
		height: 100%;
		font-family: inherit;
		color: inherit;
		&:focus {
			outline: none;
		}
		&::placeholder {
			transform: translateY(5px);
			opacity: 0;
			transition: opacity 100ms var(--ease), transform 0ms 100ms;
			color: rgb(var(--on-bg));
		}
	}

	label {
		position: absolute;
		transform-origin: left center;
		transition: transform 175ms var(--ease), color 100ms var(--ease);
		pointer-events: none;
		color: rgba(var(--on-bg), 0.45);
	}

	.cover {
		position: absolute;
		top: -5px;
		left: 0.25rem;
		transform: scaleX(0);
		transition: transform 125ms var(--ease);
		background: RGB(var(--bg));
		padding: 0 0.4rem;
		height: 5px;
		color: transparent;
		font-size: $labelFocusScale;

		&::after {
			position: absolute;
			top: 4px;
			left: 0;
			border-bottom-right-radius: 4px;
			border-bottom-left-radius: 4px;
			background: linear-gradient(
				to bottom,
				rgb(var(--bg)) 0%,
				rgba(var(--bg), 0.5) 70%,
				transparent 100%
			);
			width: 100%;
			height: 5px;
			content: '';
		}
	}

	.reveal {
		display: flex;
		flex: 0 0 2.5rem;
		justify-content: center;
		align-items: center;
		transform: translateZ(0.1px);
		margin: 0 0.25rem;
		border: none;
		border-radius: 50%;
		width: 2.5rem;
		height: 2.5rem;
		color: rgba(var(--on-bg), 0.7);
		font-size: 1.5rem;
	}

	&[focused] {
		outline-width: 2px;
		border-color: rgba(var(--tb), 1);
	}

	&[error] {
		// TODO: use theme color, but we don't have theme error colors, or really anything.
		border-color: red;
		outline-color: hsla(0, 100%, 50%, 0.4);

		label {
			color: red !important;
		}
	}

	&[expanded] {
		label {
			transform: translateY(-24px) translateX(calc(0px - var(--offsetX) + 0.65rem))
				scale($labelFocusScale * 1);
			color: rgb(var(--on-bg));
		}

		.cover {
			transform: scaleX(1);
		}

		input::placeholder {
			transform: none;
			opacity: 0.45;
			transition-delay: 0ms;
			transition-duration: 250ms;
		}
	}

	&[expanded][focused] label {
		color: rgb(var(--on-tb));
	}

	&[disabled] {
		border-color: rgba(var(--on-bg), 0.4);
		background-color: RGB(var(--bg));
		color: rgba(var(--on-bg), 0.7);
	}

	&:not([init]) {
		transition-duration: 0ms !important;
	}
}

.noscript input-textbox input {
	outline: 1px solid rgba(var(--on-bg), 0.6);

	&:focus {
		outline-color: rgba(var(--tb), 0.6);
	}
	&:hover {
		outline-color: rgba(var(--tb), 0.4);
	}
}

input-textbox label.expand,
.noscript input-textbox label {
	position: absolute;
	left: 0.65rem;
	transform: translateY(-1.5rem) scale($labelFocusScale * 1) !important;
}
